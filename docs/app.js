!function(t){var e={};function s(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)s.d(n,o,function(e){return t[e]}.bind(null,o));return n},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=0)}([function(t,e,s){"use strict";s.r(e);class n{constructor(t,e){t instanceof HTMLCanvasElement&&(this.context=t.getContext("2d")),t instanceof CanvasRenderingContext2D&&(this.context=t),this.data=e}updateFont(t){let e="";t.size&&(e+=t.size+"px"),t.family&&(e+=" "+t.family),this.context.font=e}updateFillStyle(t){t&&t.color&&(this.context.fillStyle=t.color)}}var o=function(t,e,s,n){return new(s||(s=Promise))((function(o,i){function r(t){try{d(n.next(t))}catch(t){i(t)}}function a(t){try{d(n.throw(t))}catch(t){i(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(r,a)}d((n=n.apply(t,e||[])).next())}))};class i extends n{render(){return o(this,void 0,void 0,(function*(){const t=new Image;return t.src=this.data.src,new Promise((e,s)=>{t.addEventListener("load",()=>{this.data.srcCoords.size||(this.data.srcCoords.size={width:t.width,height:t.height}),this.data.destCoords.size||(this.data.destCoords.size=this.data.srcCoords.size),this.context.drawImage(t,this.data.srcCoords.pos.x,this.data.srcCoords.pos.y,this.data.srcCoords.size.width,this.data.srcCoords.size.height,this.data.destCoords.pos.x,this.data.destCoords.pos.y,this.data.destCoords.size.width,this.data.destCoords.size.height),e({success:!0,result:this.data.destCoords})}),t.addEventListener("error",t=>{s(t)})})}))}}class r{constructor(t,e){this.pos=t,this.size=e}getLeftTopPos(){return this.pos}getLeftBottomPos(){return{x:0,y:this.pos.y+this.size.height||0}}getRightTopPos(){return{x:this.pos.x+this.size.width||0,y:this.pos.y}}getRightBottomPos(){return{x:this.pos.x+this.size.width||0,y:this.pos.y+this.size.height||0}}increaseX(t){return this.pos.x+=t,this}increaseY(t){return this.pos.y+=t,this}}var a=function(t,e,s,n){return new(s||(s=Promise))((function(o,i){function r(t){try{d(n.next(t))}catch(t){i(t)}}function a(t){try{d(n.throw(t))}catch(t){i(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(r,a)}d((n=n.apply(t,e||[])).next())}))};class d extends n{render(){return a(this,void 0,void 0,(function*(){return new Promise((t,e)=>{this.updateFillStyle(this.data.fill),this.context.fillRect(this.data.pos.x,this.data.pos.y,this.data.size.width,this.data.size.height),t({success:!0,result:new r(this.data.pos,this.data.size)})})}))}}var h=function(t,e,s,n){return new(s||(s=Promise))((function(o,i){function r(t){try{d(n.next(t))}catch(t){i(t)}}function a(t){try{d(n.throw(t))}catch(t){i(t)}}function d(t){var e;t.done?o(t.value):(e=t.value,e instanceof s?e:new s((function(t){t(e)}))).then(r,a)}d((n=n.apply(t,e||[])).next())}))};const c=document.querySelector("canvas").getContext("2d");new class extends n{render(){return h(this,void 0,void 0,(function*(){this.updateFont(this.data.font),this.updateFillStyle(this.data.fill);const t=this.context.measureText(this.data.font.text).width;this.context.fillText(this.data.font.text,this.data.pos.x,this.data.pos.y);const e={success:!0,result:new r(this.data.pos,{height:this.data.font.size,width:t})};return Promise.resolve(e)}))}}(c,{pos:{x:0,y:30},font:{text:"hello world: "+(new Date).toISOString(),size:12,family:"sans-serif"}}).render().then(t=>new d(c,{pos:t.result.getRightBottomPos(),size:{width:100,height:100},fill:{color:"#aaa"}}).render()).then(t=>new i(c,{src:"https://www.baidu.com/img/bd_logo1.png?where=super",srcCoords:new r({x:0,y:0}),destCoords:new r(t.result.increaseX(10).getRightTopPos())}).render())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,